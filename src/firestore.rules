service cloud.firestore {
  match /databases/{database}/documents {
    // match /{document=**} {
    //   allow read, write;
    // }
    
    //db section block
    match /db/tacadmin/currency/{id} {
    	allow read;// if isSignedIn();
      allow write: if isSignedIn() && isAdminUser();
    }
    
    match /db/tacadmin/delivery/{id} {
    	allow read;// if isSignedIn();
      allow write: if isSignedIn() && isAdminUser();
    }
    
    match /db/tacadmin/gift-card-messages/{id} {
    	allow read;// if isSignedIn();
      allow write: if isSignedIn() && isAdminUser();
    }
    
    match /db/tacadmin/gift-card-styles/{id} {
    	allow read;// if isSignedIn();
      allow write: if isSignedIn() && isAdminUser();
    }
    
    match /db/tacadmin/items/{id} {
    	allow read;// if isSignedIn();
      allow create: if isSignedIn() && isAdminUser();
      allow update: if isSignedIn();
      allow delete: if false;
    }
    
    match /db/tacadmin/logs/{id} {
    	allow read, create: if isSignedIn() && isAdminUser();
      allow delete: if false;
      allow update: if false;
    }
    
    match /db/tacadmin/main-categories/{id} {
    	allow read;// if isSignedIn();
      allow create, update: if isSignedIn() && isAdminUser();
      allow delete: if false;
    }
    
    match /db/tacadmin/products/{id} {
    	allow read;// if isSignedIn();
      allow create, update: if isSignedIn() && isAdminUser();
      allow delete: if false;
    }
    
    match /db/tacadmin/roles/{id} {
    	allow read, write: if isSignedIn() && isAdminUser();
    }
    
    match /db/tacadmin/settings/{id} {
    	allow read;// if isSignedIn();
      allow create, update: if isSignedIn() && isAdminUser();
      allow delete: if false;
    }
    
    match /db/tacadmin/settings/banners/{id} {
    	allow read;// if isSignedIn();
      allow create, update: if isSignedIn() && isAdminUser();
      allow delete: if false;
    }
    
    match /db/tacadmin/settings/store/{id} {
    	allow read;// if isSignedIn();
      allow create, update: if isSignedIn() && isAdminUser();
      allow delete: if false;
    }
    
    match /db/tacadmin/settings/tax/{id} {
    	allow read;// if isSignedIn();
      allow create, update: if isSignedIn() && isAdminUser();
      allow delete: if false;
    }
    
    match /db/tacadmin/sub-categories/{id} {
    	allow read;// if isSignedIn();
      allow create, update: if isSignedIn() && isAdminUser();
      allow delete: if false;
    }
    
    match /db/tacadmin/users/{id} {
    	allow read, write: if isSignedIn() && isAdminUser();
    }
    
    //authorization code block
    match /authorizations/{id} {
    	allow read, write: if false;
    }
    
    //devices code block
    match /devices/{id} {
    	allow read, create, update: if isSignedIn() && isAdminUser();
      allow delete: if false;
    }
    
    //invoices block
    match /invoices/{id} {
    	allow read, create, update: if isSignedIn();// && isAdminUser();
      allow delete: if false;
    }
    
    //orders block
    match /orders/{id} {
    	allow read, create, update: if isSignedIn();// && isAdminUser();
      //allow update: if isSignedIn() && isValidDocument();
      allow delete: if false;
    }
    
    //orders products-in-cart
    match /products-in-cart/{id} {
    	allow read, write: if isSignedIn();// && isAdminUser()
    }
    
    //alert-new-order block
    match /alert-new-order/{id} {
    	allow read, write: if isSignedIn();// && isAdminUser()
    }
    
    //reviews block
    match /reviews/{id} {
    	allow read;
      allow write;//: if isSignedIn();
    }
    
    //social-tree block
    match /social-tree/{id} {
    	allow read, write: if isSignedIn();
    }
    
    //social-tree-events block
    match /social-tree-events/{id} {
    	allow read, write: if isSignedIn();
    }
    
    //users block
    match /users/{userId} {
    	allow read, create, update: if (isSignedIn() && isOwner(userId)) || isAdminUser();
      allow delete: if false;
    }
    
    //presell block
    match /presell/{presellId} {
    	allow read: if isSignedIn() && isAdminUser();
      allow delete: if isSignedIn() && isAdminUser();
      allow create: if true;
    }
    
    //function to check signed in user
    function isSignedIn() {
    	return request.auth != null;
    }
    
    //function to check if user is owner
    function isOwner(userId) {
    	return request.auth.token.email == userId;
    }
    
    //function to check if user is from admin
    function isAdminUser() {
    	return request.auth.token.email.matches('.*@tac[.]ng');
    }
    
    //function to validate resource and request for orders
    // function isValidDocument(){
    // 	//return request.resource.data.id == resource.data.id;//-Lzlb89acEx3JfKNez22
    //   return request.resource.data.key == '';
    // }
  }
}